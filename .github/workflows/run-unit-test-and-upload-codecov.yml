##############################################################################
#
# GitGub CI workflow syntax spec:
#    https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions
#
# CodeCov github action setup:
#    https://github.com/codecov/codecov-action
#
# CodeCov badge setup:
#    https://docs.codecov.com/docs/status-badges
#
# version 1.1
##############################################################################

name: Run Unit Test and Upload Coverage Report

on:
  # Triggered whenever push to main and phase2_dev
  push:
    branches: 
      - "main"
      - "phase2_dev"

  # Triggered whenever a pull request is created on main
  pull_request:
    branches: [ "main" ]
    types: [opened]

  # Allow manual trigger
  workflow_dispatch:
    
jobs:
  build-run-upload:
    # Create a container of the latest Ubuntu, other values could be
    # ubuntu-latest, ubuntu-22.04, etc.
    runs-on: ubuntu-22.04
    # defaults:
    #   run:
    #     shell: bash       # specify bash for use with docker container
    # container:
    #   image: osrf/ros:humble-desktop # use ROS Humble from docker hub repository
    steps:
      # We want to use GitHub CI checkout version 3 to check out our branch
      - uses: actions/checkout@v3
      
      # Install some system pacakges
      - name: Install build packages
        run: |
          sudo apt update
          sudo apt install -y doxygen lcov gcovr pandoc
          source /opt/ros/humble/setup.bash
          sudo apt install -y ros-${ROS_DISTRO}-catch-ros2

      # Build, run unit test, and generate coverage report
      - name: Configure CMake flags and build exectables
        run: |
          cmake -D WANT_COVERAGE=ON -D CMAKE_BUILD_TYPE=Debug -D OpenCV_DIR=/usr/share/opencv4 -S ./ -B build/
          cmake --build build/ --clean-first --target all test_coverage
          cat build/test_coverage.info

      # # Run all unit test, integration test, and generate combined coverage report
      # - name: Build, run unit test, and generate coverage report
      #   run: |
      #     ./do-tests-and-coverage.bash
      #     ./do-docs.bash
      #     cat build/test_coverage_merged.info

      # Upload coverage result to CodeCov
      - name: Upload coverage result to CodeCov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # required (must add token in your github repo)
          files: ${{github.workspace}}/build/test_coverage_merged.info
          fail_ci_if_error: true # optional (default = false)
          verbose: true # optional (default = false)      
          # disable_search: true # optional (default = false)
          plugin: none         # optional (xcode, gcov, pycoverage)
          